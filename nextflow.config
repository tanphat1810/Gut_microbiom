params {
    input  = 'data/*.fastq.gz'  
    outdir = 'results'          
    seqkit_out   = 'seqkit_result/*.filtered.fastq.gz'
    classifier = 'silva/silva-138-99-nb-classifier.qza'
    metadata = 'metadata/metadata.tsv' 
}
 params.qiime_denoise = [
    front: "AGAGTTTGATCMTGGCTCAG",
    adapter: "TACGGYTACCTTGTTACGACTT",
    max_mismatch: 2,
    indels: false,
    trunc_len: 0,
    trim_left: 0,
    max_ee: 2.0,
    trunc_q: 2,
    min_len: 1000,
    max_len: 1600,
    pooling_method: "independent",
    chimera_method: "consensus",
    min_fold_parent_over_abundance: 3.5,
    allow_one_off: false,
    n_threads: 4,
    n_reads_learn: 1000000,
    hashed_feature_ids: true,
    retain_all_samples: true
]
params.filter = [
 min_feature_freq: 10
        ]
params.filtersample = [
 min_sample_freq: 100
 ]
profiles {
    docker {
        docker.enabled  = true
        singularity.enabled = false
        conda.enabled   = false
        podman.enabled  = false
        docker.runOptions = '-u $(id -u):$(id -g)'
    }
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        conda.enabled = false
        docker.enabled = false
    }
}

// **Cấu hình theo dõi pipeline**
def trace_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

